import { Document, Page, Text, View, StyleSheet, Image } from '@react-pdf/renderer';
import type { CalculationResult } from '../../types/calculations';
import logo from '../../assets/images/logo.png';
import { APP_NAME, APP_VERSION } from '../../constants/version';

const styles = StyleSheet.create({
  page: {
    padding: '40 60',
    fontFamily: 'Helvetica',
    fontSize: 10,
    color: '#2c3e50'
  },
  header: {
    marginBottom: 20,
    borderBottom: 1,
    borderColor: '#e2e8f0',
    paddingBottom: 15
  },
  logo: {
    width: 120,
    marginBottom: 10
  },
  title: {
    fontSize: 20,
    fontFamily: 'Helvetica-Bold',
    marginBottom: 5
  },
  subtitle: {
    fontSize: 10,
    color: '#64748b',
    marginBottom: 15
  },
  metadata: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    fontSize: 9,
    color: '#64748b'
  },
  section: {
    marginBottom: 15
  },
  sectionTitle: {
    fontSize: 12,
    fontFamily: 'Helvetica-Bold',
    color: '#2c3e50',
    marginBottom: 8,
    backgroundColor: '#f8fafc',
    padding: '6 8',
    borderRadius: 4
  },
  row: {
    flexDirection: 'row',
    marginBottom: 4,
    fontSize: 10
  },
  label: {
    width: '30%',
    color: '#64748b'
  },
  value: {
    width: '70%',
    color: '#2c3e50'
  },
  table: {
    marginTop: 10
  },
  tableHeader: {
    flexDirection: 'row',
    backgroundColor: '#f8fafc',
    borderBottomColor: '#e2e8f0',
    borderBottomWidth: 1,
    padding: '8 6',
    fontSize: 9,
    fontFamily: 'Helvetica-Bold',
    color: '#64748b'
  },
  tableRow: {
    flexDirection: 'row',
    borderBottomColor: '#e2e8f0',
    borderBottomWidth: 1,
    padding: '8 6'
  },
  tableCell: {
    flex: 1
  },
  result: {
    marginTop: 15,
    padding: 10,
    backgroundColor: '#f8fafc',
    borderRadius: 4,
    borderLeft: 2,
    borderLeftColor: '#3b82f6'
  },
  resultText: {
    fontFamily: 'Helvetica-Bold',
    color: '#2c3e50',
    fontSize: 12
  },
  notes: {
    marginTop: 15,
    padding: 10,
    backgroundColor: '#f8fafc',
    borderRadius: 4
  },
  footer: {
    position: 'absolute',
    bottom: 40,
    left: 60,
    right: 60,
    textAlign: 'center',
    color: '#94a3b8',
    fontSize: 8,
    paddingTop: 8,
    borderTopWidth: 1,
    borderTopColor: '#e2e8f0'
  },
  vixText: {
    color: '#dc2626'
  },
  dimensionValue: {
    fontFamily: 'Helvetica-Bold'
  },
  contentContainer: {
    marginTop: 5,
    marginBottom: 5
  },
  text: {
    fontSize: 10,
    color: '#2c3e50'
  }
});

const formatNumber = (num: number): string => {
  return num.toLocaleString('en-US', {
    minimumFractionDigits: 2,
    maximumFractionDigits: 2
  });
};

interface WoodCalculationReportProps {
  calculation: CalculationResult;
  timestamp: string;
  user: {
    email: string;
    name?: string;
  };
}

export const WoodCalculationReport = ({ calculation, timestamp, user }: WoodCalculationReportProps) => {
  // Helper function to format dimensions
  const formatDimension = (value: number, unit: string) => {
    return `${value.toLocaleString('en-US', { 
      minimumFractionDigits: 2,
      maximumFractionDigits: 2 
    })} ${unit}`;
  };

  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.header}>
          <Image src={logo} style={styles.logo} />
          <Text style={styles.title}>
            <Text>Wood Calculation Report</Text>
          </Text>
          <Text style={styles.subtitle}>
            <Text>Professional Wood Solutions</Text>
          </Text>
          <View style={styles.metadata}>
            <View>
              <Text>
                <Text>Generated by: </Text>
                <Text>{user.name || user.email}</Text>
              </Text>
            </View>
            <View>
              <Text>
                <Text>{new Date(timestamp).toLocaleString()}</Text>
              </Text>
            </View>
          </View>
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            <Text>Wood Information</Text>
          </Text>
          <View style={styles.row}>
            <Text style={styles.label}>
              <Text>Type:</Text>
            </Text>
            <Text style={styles.value}>
              <Text>{calculation.woodType.name}</Text>
            </Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>
              <Text>Grade:</Text>
            </Text>
            <Text style={styles.value}>
              <Text>{calculation.woodType.grade}</Text>
            </Text>
          </View>
          {calculation.woodType.origin && (
            <View style={styles.row}>
              <Text style={styles.label}>
                <Text>Origin:</Text>
              </Text>
              <Text style={styles.value}>
                <Text>{calculation.woodType.origin}</Text>
              </Text>
            </View>
          )}
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            <Text>Dimensions</Text>
          </Text>
          <View style={styles.row}>
            <Text style={styles.label}>
              <Text>Thickness:</Text>
            </Text>
            <Text style={styles.value}>
              <Text style={styles.dimensionValue}>
                {formatDimension(calculation.dimensions.thickness, 'inches')}
              </Text>
            </Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>
              <Text>Width:</Text>
            </Text>
            <Text style={styles.value}>
              <Text style={styles.dimensionValue}>
                {formatDimension(calculation.dimensions.width, 'inches')}
              </Text>
            </Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>
              <Text>Length:</Text>
            </Text>
            <Text style={styles.value}>
              <Text style={styles.dimensionValue}>
                {formatDimension(calculation.dimensions.length, 'feet')}
              </Text>
            </Text>
          </View>
        </View>

        <View style={styles.section}>
          <Text style={styles.sectionTitle}>
            <Text>Calculations</Text>
          </Text>
          <View style={styles.table}>
            <View style={styles.tableRow}>
              <Text style={styles.tableCell}>
                <Text>Volume:</Text>
              </Text>
              <Text style={styles.tableCell}>
                <Text>{calculation.volumeM3.toFixed(4)} m³</Text>
              </Text>
            </View>
            <View style={styles.tableRow}>
              <Text style={styles.tableCell}>
                <Text>Planks per m³:</Text>
              </Text>
              <Text style={styles.tableCell}>
                <Text>{calculation.planksPerM3.toFixed(2)}</Text>
              </Text>
            </View>
            <View style={styles.tableRow}>
              <Text style={styles.tableCell}>
                <Text>Price per Plank:</Text>
              </Text>
              <Text style={styles.tableCell}>
                <Text>TZS {formatNumber(calculation.dimensions.pricePerPlank)}</Text>
              </Text>
            </View>
          </View>
        </View>

        <View style={styles.result}>
          <Text style={styles.resultText}>
            <Text>Final Price per m³: </Text>
            <Text>TZS {formatNumber(calculation.pricePerM3)}</Text>
          </Text>
        </View>

        {calculation.notes && (
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>REMARKS</Text>
            <View style={styles.contentContainer}>
              <Text style={styles.text}>{calculation.notes}</Text>
            </View>
          </View>
        )}

        <View style={styles.footer}>
          <Text>
            <Text>{APP_NAME} {APP_VERSION} • </Text>
            <Text>Developed by </Text>
            <Text style={styles.vixText}>Vix</Text>
          </Text>
        </View>
      </Page>
    </Document>
  );
}; 